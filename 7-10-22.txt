reverse level order traversal

INORDER TRAVERSAL:
    1
   / \
   2  3
   /\ /\
  4 5 6 7
so iterate while(stack !empty())
if front of queue is not null then simply push front->left our first node and after that continue;
else if null (no ode is actually we just pushed left and the left or right didnt exist)
do pop()from stack after adding in resultant vector ans and add front->right
note: if front->right is also null rec.tree will got to prev root as st.top and pop after adding right
